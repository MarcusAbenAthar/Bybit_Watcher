Regras de OURO para programar o bot:

1 - Autonomo nas decisões (TP, SL e alavancagem);
2 - Criterioso;
3 - Seguro;
4 - Certeiro;
5 - Eficiente;
6 - Clareza;
7 - Modular;
8 - Composto por plugins;
9 - Testável;
10 - Documentado com Docstrings e comentários;

Boas práticas ao programar o bot:

1 - Evitar redundâncias;
2 - Respeitar a responsabilidade de cada plugin;
3 - Evitar importação circular;

Cada plugin segue:

* Herança da classe base Plugin
* Responsabilidade única
* Interface padronizada
* Documentação completa

Esta estrutura:

* É modular
* Evita dependências circulares
* Facilita testes
* Mantém organização clara
* Separa responsabilidades



Estrutura do projeto:

Bybit_Watcher/
├── main.py                  # Arquivo principal
├── .env                     # Configurações sensíveis (Não será enviado)
├── regras_de_ouro.txt      # Regras do projeto (Não será enviado)
│
├── plugins/                 # Diretório de plugins
│   ├── __init__.py         # Inicializador do pacote
│   ├── plugin.py           # Classe base para plugins
│   ├── conexao.py          # Plugin de conexão com Bybit
│   ├── banco_dados.py      # Plugin de operações básicas do banco
│   ├── calculo_alavancagem.py # Cálculos de alavancagem
│   ├── calculo_risco.py    # Cálculos de risco
│   ├── analise_candles.py  # Análise de candles
│   ├── medias_moveis.py    # Análise de médias móveis
│   ├── price_action.py     # Análise de price action
│   ├── validador_dados.py  # Validação de dados
│   ├── sinais_plugin.py    # Geração de sinais
│   ├── analisador_mercado.py # Análise do mercado
│   ├── sltp.py               # Calculo de SL e TP com cérebro
│   ├── execucao_ordens.py    # Execução de ordens
│   │
│   ├── indicadores/        # Subpacote de indicadores
│   │    ├── __init__.py
│   │    ├── indicadores_tendencia.py
│   │    ├── indicadores_osciladores.py
│   │    ├── indicadores_volatilidade.py
│   │    ├── indicadores_volume.py
│   │    └── outros_indicadores.py
│   │
│   └── gerenciadores/      # Subpacote dos gerenciadores
│         ├── __init__.py   # Inicializador do pacote
│         ├── gerenciador.py  # Base do Gerenciador
│         ├── gerenciador_banco.py # Gerenciador de banco de dados
│         ├── gerenciador_bot.py  # Gerenciador do bot
│         └── gerenciador_plugins.py # Gerenciador dos plugins
│
│
├── utils/                  # Utilitários
│   ├── __init__.py         # Inicializador do pacote
│   ├── config.py           # Centralização das configurações do bot
│   ├── handlers.py         # Implementação do handlers
│   ├── logging_config.py   # Configuração de logs
│   ├── padroes_talib.py    # Implementação do padroes_candles
│   └── plugins_dependencias.json # Complemento do sistema de auto identificar dependencias
│
└── logs/                   # Diretório de logs
    ├── bot/
    │   └── bot_DD-MM-YYYY.log
    ├── sinais/
    │   └── sinais_DD-MM-YYYY.log
    ├── erros/
    │    └── erros_DD-MM-YYYY.log

https://github.com/MarcusAbenAthar/Bybit_Watcher